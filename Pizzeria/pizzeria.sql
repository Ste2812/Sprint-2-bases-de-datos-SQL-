-- MySQL Script generated by MySQL Workbench
-- Thu Jan 13 22:29:57 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema pizzeria
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema pizzeria
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `pizzeria` DEFAULT CHARACTER SET utf8 ;
USE `pizzeria` ;

-- -----------------------------------------------------
-- Table `pizzeria`.`localidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`localidad` (
  `id_localidad` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  UNIQUE INDEX `id_localidad_UNIQUE` (`id_localidad` ASC) VISIBLE,
  PRIMARY KEY (`id_localidad`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`provincia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`provincia` (
  `id_provincia` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `localidad_id` INT NOT NULL,
  PRIMARY KEY (`id_provincia`),
  UNIQUE INDEX `id_provincia_UNIQUE` (`id_provincia` ASC) VISIBLE,
  INDEX `FK_provincia_localidad_idx` (`localidad_id` ASC) VISIBLE,
  CONSTRAINT `FK_provincia_localidad`
    FOREIGN KEY (`localidad_id`)
    REFERENCES `pizzeria`.`localidad` (`id_localidad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`cliente` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(15) NOT NULL,
  `apellido1` VARCHAR(15) NOT NULL,
  `apellido2` VARCHAR(15) NULL,
  `direccion` VARCHAR(45) NULL,
  `id_provincia` INT NOT NULL,
  `telefono` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK_cliente_id_provincia`
    FOREIGN KEY (`id`)
    REFERENCES `pizzeria`.`provincia` (`id_provincia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`sucursal_tienda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`sucursal_tienda` (
  `id_tienda` INT NOT NULL,
  `nombre` VARCHAR(30) NOT NULL,
  `direccion` VARCHAR(80) NOT NULL,
  `ref_provincia` INT NOT NULL,
  PRIMARY KEY (`id_tienda`),
  UNIQUE INDEX `id_tienda_UNIQUE` (`id_tienda` ASC) VISIBLE,
  INDEX `FK_sucursal_tienda_idx` (`ref_provincia` ASC) VISIBLE,
  CONSTRAINT `FK_sucursal_tienda_provincia`
    FOREIGN KEY (`ref_provincia`)
    REFERENCES `pizzeria`.`provincia` (`id_provincia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`empleado` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido1` VARCHAR(45) NOT NULL,
  `apellido2` VARCHAR(45) NULL,
  `NIF` VARCHAR(15) NOT NULL,
  `telefono` INT NOT NULL,
  `tipo` ENUM('cocina''delivery') NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`pedidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`pedidos` (
  `id_pedido` INT NOT NULL AUTO_INCREMENT,
  `cliente_id` INT NULL,
  `fecha_hora` DATETIME NOT NULL,
  `tipo_entrega` ENUM('domicilio', 'recogida') NOT NULL,
  `tot_cantidad` INT NOT NULL,
  `sub_total` DOUBLE NOT NULL,
  `ref_empleado` INT NOT NULL,
  `tienda_id` INT NOT NULL,
  PRIMARY KEY (`id_pedido`),
  UNIQUE INDEX `num_pedido_UNIQUE` (`id_pedido` ASC) VISIBLE,
  INDEX `FK_pedidos_cliente_idx` (`cliente_id` ASC) VISIBLE,
  INDEX `FK_pedidos_sucursal_tienda_idx` (`tienda_id` ASC) VISIBLE,
  INDEX `FK_pedidos_empleado_idx` (`ref_empleado` ASC) VISIBLE,
  CONSTRAINT `FK_pedidos_cliente`
    FOREIGN KEY (`cliente_id`)
    REFERENCES `pizzeria`.`cliente` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_pedidos_sucursal_tienda`
    FOREIGN KEY (`tienda_id`)
    REFERENCES `pizzeria`.`sucursal_tienda` (`id_tienda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_pedidos_empleado`
    FOREIGN KEY (`ref_empleado`)
    REFERENCES `pizzeria`.`empleado` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`categoria_pizza`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`categoria_pizza` (
  `id_pizza` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `tipo` ENUM('fijo_en_carta''estacional') NOT NULL,
  `ref_producto` INT NOT NULL,
  PRIMARY KEY (`id_pizza`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`producto` (
  `id_producto` INT NOT NULL,
  `nombre` VARCHAR(30) NULL,
  `categoria` ENUM('hamburguer''pizza''bebida') NULL,
  `descripcion` VARCHAR(100) NULL,
  `precio` DOUBLE NULL,
  `imagen` BLOB NULL,
  PRIMARY KEY (`id_producto`),
  CONSTRAINT `FK_producto_categoria_pizza`
    FOREIGN KEY (`id_producto`)
    REFERENCES `pizzeria`.`categoria_pizza` (`id_pizza`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`empleados_tienda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`empleados_tienda` (
  `id_empleado` INT NOT NULL,
  `id_tienda` INT NOT NULL,
  INDEX `FK_empleados_tienda_sucursal_tienda_idx` (`id_tienda` ASC) VISIBLE,
  INDEX `FK_empleados_tienda_emplead_empleado_idx` (`id_empleado` ASC) VISIBLE,
  CONSTRAINT `FK_empleados_tienda_sucursal_tienda`
    FOREIGN KEY (`id_tienda`)
    REFERENCES `pizzeria`.`sucursal_tienda` (`id_tienda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_empleados_tienda_emplead_empleado`
    FOREIGN KEY (`id_empleado`)
    REFERENCES `pizzeria`.`empleado` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`pedidos_has_producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`pedidos_has_producto` (
  `pedidos_id_pedido` INT NOT NULL,
  `producto_id_producto` INT NOT NULL,
  `cantidad` INT NULL,
  PRIMARY KEY (`pedidos_id_pedido`, `producto_id_producto`),
  INDEX `fk_pedidos_has_producto_producto1_idx` (`producto_id_producto` ASC) VISIBLE,
  INDEX `fk_pedidos_has_producto_pedidos1_idx` (`pedidos_id_pedido` ASC) VISIBLE,
  CONSTRAINT `fk_pedidos_has_producto_pedidos1`
    FOREIGN KEY (`pedidos_id_pedido`)
    REFERENCES `pizzeria`.`pedidos` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedidos_has_producto_producto1`
    FOREIGN KEY (`producto_id_producto`)
    REFERENCES `pizzeria`.`producto` (`id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `pizzeria` ;

-- -----------------------------------------------------
-- Placeholder table for view `pizzeria`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `pizzeria`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzeria`.`view1`;
USE `pizzeria`;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
